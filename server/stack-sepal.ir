{:package "server",
 :options {:port 7011},
 :files {"updater.router" {:ns ["ns" "server.updater.router"],
                           :defs {"change" ["defn"
                                            "change"
                                            ["db" "op-data" "session-id" "op-id" "op-time"]
                                            ["assoc-in" "db" ["[]" ":sessions" "session-id" ":router"] "op-data"]]},
                           :procs []},
         "twig.container" {:ns ["ns"
                                "server.twig.container"
                                [":require"
                                 ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                                 ["[]" "server.twig.user" ":refer" ["[]" "twig-user"]]
                                 ["[]" "server.twig.group" ":refer" ["[]" "twig-group"]]
                                 ["[]" "server.twig.group-brief" ":refer" ["[]" "twig-group-brief"]]
                                 ["[]" "server.twig.core" ":refer" ["[]" "twig-message"]]]],
                           :defs {"twig-container" ["def"
                                                    "twig-container"
                                                    ["create-twig"
                                                     ":container"
                                                     ["fn"
                                                      ["db" "session"]
                                                      ["let"
                                                       [["user-id" [":user-id" "session"]]
                                                        ["router" [":router" "session"]]]
                                                       ["if"
                                                        ["some?" "user-id"]
                                                        ["let"
                                                         [["user" ["get-in" "db" ["[]" ":users" "user-id"]]]]
                                                         ["{}"
                                                          [":session" "session"]
                                                          [":logged-in?" "true"]
                                                          [":user" ["twig-user" "user"]]
                                                          [":router"
                                                           ["assoc"
                                                            "router"
                                                            ":data"
                                                            ["case"
                                                             [":name" "router"]
                                                             [":portal"
                                                              ["let"
                                                               [["group-ids" [":involved-groups" "user"]]]
                                                               ["->>"
                                                                "group-ids"
                                                                ["map"
                                                                 ["fn"
                                                                  ["group-id"]
                                                                  ["[]"
                                                                   "group-id"
                                                                   ["select-keys"
                                                                    ["get-in" "db" ["[]" ":task-groups" "group-id"]]
                                                                    ["[]" ":id" ":name"]]]]]
                                                                ["into" ["{}"]]]]]
                                                             [":group"
                                                              ["twig-group"
                                                               ["get-in"
                                                                "db"
                                                                ["[]" ":task-groups" [":params" "router"]]]
                                                               [":show-done?" "session"]]]
                                                             [":group-editor"
                                                              ["get-in" "db" ["[]" ":task-groups" [":params" "router"]]]]
                                                             [":group-manager"
                                                              ["let"
                                                               [["task-group"
                                                                 ["get-in"
                                                                  "db"
                                                                  ["[]" ":task-groups" [":params" "router"]]]]
                                                                ["read-user"
                                                                 ["fn"
                                                                  ["user-ids"]
                                                                  ["->>"
                                                                   "user-ids"
                                                                   ["map"
                                                                    ["fn"
                                                                     ["user-id"]
                                                                     ["[]"
                                                                      "user-id"
                                                                      ["twig-user"
                                                                       ["get-in" "db" ["[]" ":users" "user-id"]]]]]]
                                                                   ["into" ["{}"]]]]]]
                                                               ["->"
                                                                "task-group"
                                                                ["update" ":admins" "read-user"]
                                                                ["update" ":users" "read-user"]]]]
                                                             [":task-editor"
                                                              ["let"
                                                               [["params" [":params" "router"]]]
                                                               ["get-in"
                                                                "db"
                                                                ["[]"
                                                                 ":task-groups"
                                                                 [":group-id" "params"]
                                                                 ":tasks"
                                                                 [":task-id" "params"]]]]]
                                                             [":person"
                                                              ["let"
                                                               [["member"
                                                                 ["get-in" "db" ["[]" ":users" [":params" "router"]]]]]
                                                               ["{}"
                                                                [":user" ["twig-user" "member"]]
                                                                [":groups"
                                                                 ["->>"
                                                                  [":involved-groups" "member"]
                                                                  ["map"
                                                                   ["fn"
                                                                    ["group-id"]
                                                                    ["[]"
                                                                     "group-id"
                                                                     ["twig-group-brief"
                                                                      ["get-in" "db" ["[]" ":task-groups" "group-id"]]]]]]
                                                                  ["into" ["{}"]]]]]]]
                                                             [":groups"
                                                              ["->>"
                                                               ["vals" [":task-groups" "db"]]
                                                               ["map"
                                                                ["fn"
                                                                 ["task-group"]
                                                                 ["[]"
                                                                  [":id" "task-group"]
                                                                  ["twig-group-brief" "task-group"]]]]
                                                               ["into" ["{}"]]]]
                                                             [":people"
                                                              ["->>"
                                                               ["vals" [":users" "db"]]
                                                               ["map"
                                                                ["fn"
                                                                 ["member"]
                                                                 ["[]" [":id" "member"] ["twig-user" "member"]]]]
                                                               ["into" ["{}"]]]]
                                                             [":messages"
                                                              ["->>"
                                                               ["vals" [":messages" "db"]]
                                                               ["map"
                                                                ["fn"
                                                                 ["message"]
                                                                 ["[]"
                                                                  [":id" "message"]
                                                                  ["twig-message"
                                                                   "message"
                                                                   ["get-in" "db" ["[]" ":users" "user-id"]]]]]]
                                                               ["into" ["{}"]]]]
                                                             "nil"]]]
                                                          [":statistics"
                                                           ["{}"
                                                            [":sessions-count" ["count" [":sessions" "db"]]]
                                                            [":users-count" ["count" [":users" "db"]]]]]]]
                                                        ["{}" [":session" "session"] [":logged-in?" "false"]]]]]]]},
                           :procs []},
         "updater.task" {:ns ["ns" "server.updater.task" [":require" ["[]" "server.schema" ":as" "schema"]]],
                         :defs {"toggle" ["defn"
                                          "toggle"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["update-in"
                                           "db"
                                           ["[]" ":task-groups" [":group-id" "op-data"]]
                                           ["fn"
                                            ["task-group"]
                                            ["let"
                                             [["task-id" [":task-id" "op-data"]]
                                              ["task"
                                               ["->"
                                                ["get-in"
                                                 "task-group"
                                                 ["[]" ["if" [":done?" "op-data"] ":done-tasks" ":tasks"] "task-id"]]
                                                ["update" ":done?" "not"]
                                                ["assoc" ":updated-time" "op-time"]]]]
                                             ["if"
                                              [":done?" "op-data"]
                                              ["->"
                                               "task-group"
                                               ["assoc-in" ["[]" ":tasks" "task-id"] "task"]
                                               ["update" ":done-tasks" ["fn" ["tasks"] ["dissoc" "tasks" "task-id"]]]]
                                              ["->"
                                               "task-group"
                                               ["assoc-in" ["[]" ":done-tasks" "task-id"] "task"]
                                               ["update" ":tasks" ["fn" ["tasks"] ["dissoc" "tasks" "task-id"]]]]]]]]],
                                "touch" ["defn"
                                         "touch"
                                         ["db" "op-data" "session-id" "op-id" "op-time"]
                                         ["assoc-in"
                                          "db"
                                          ["[]"
                                           ":task-groups"
                                           [":group-id" "op-data"]
                                           ":tasks"
                                           [":task-id" "op-data"]
                                           ":updated-time"]
                                          "op-time"]],
                                "create" ["defn"
                                          "create"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [["group-id" [":group-id" "op-data"]] ["text" [":text" "op-data"]]]
                                           ["assoc-in"
                                            "db"
                                            ["[]" ":task-groups" "group-id" ":tasks" "op-id"]
                                            ["merge"
                                             "schema/task"
                                             ["{}"
                                              [":id" "op-id"]
                                              [":group-id" "group-id"]
                                              [":text" "text"]
                                              [":created-time" "op-time"]
                                              [":updated-time" "op-time"]]]]]],
                                "edit" ["defn"
                                        "edit"
                                        ["db" "op-data" "session-id" "op-id" "op-time"]
                                        ["update-in"
                                         "db"
                                         ["[]" ":task-groups" [":group-id" "op-data"] ":tasks" [":task-id" "op-data"]]
                                         ["fn"
                                          ["task"]
                                          ["->"
                                           "task"
                                           ["assoc" ":text" [":text" "op-data"]]
                                           ["assoc" ":updated-time" "op-time"]]]]],
                                "delete" ["defn"
                                          "delete"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["update-in"
                                           "db"
                                           ["[]" ":task-groups" [":group-id" "op-data"] ":tasks"]
                                           ["fn" ["cursor"] ["dissoc" "cursor" [":task-id" "op-data"]]]]]},
                         :procs []},
         "util" {:ns ["ns" "server.util"],
                 :defs {"find-first" ["defn"
                                      "find-first"
                                      ["f" "xs"]
                                      ["reduce" ["fn" ["_" "x"] ["when" ["f" "x"] ["reduced" "x"]]] "nil" "xs"]]},
                 :procs []},
         "schema" {:ns ["ns" "server.schema"],
                   :defs {"message" ["def"
                                     "message"
                                     ["{}" [":id" "nil"] [":author-id" "nil"] [":text" "nil"] [":time" "nil"]]],
                          "configs" ["def"
                                     "configs"
                                     ["{}" [":storage-key" "|/tmp/woodenlist-storage.edn"] [":port" "5021"]]],
                          "user" ["def"
                                  "user"
                                  ["{}"
                                   [":name" "nil"]
                                   [":id" "nil"]
                                   [":nickname" "nil"]
                                   [":avatar" "nil"]
                                   [":password" "nil"]
                                   [":involved-groups" ["#{}"]]]],
                          "database" ["def"
                                      "database"
                                      ["{}"
                                       [":sessions" ["{}"]]
                                       [":users" ["{}"]]
                                       [":task-groups" ["{}"]]
                                       [":messages" ["{}"]]]],
                          "task" ["def"
                                  "task"
                                  ["{}"
                                   [":id" "nil"]
                                   [":group-id" "nil"]
                                   [":text" "nil"]
                                   [":done?" "false"]
                                   [":created-time" "nil"]
                                   [":updated-time" "nil"]]],
                          "router" ["def"
                                    "router"
                                    ["{}" [":name" "nil"] [":title" "nil"] [":data" ["{}"]] [":router" "nil"]]],
                          "session" ["def"
                                     "session"
                                     ["{}"
                                      [":user-id" "nil"]
                                      [":id" "nil"]
                                      [":nickname" "nil"]
                                      [":router" ["{}" [":name" ":portal"] [":data" "nil"] [":router" "nil"]]]
                                      [":show-done?" "false"]
                                      [":notifications" ["[]"]]]],
                          "notification" ["def" "notification" ["{}" [":id" "nil"] [":kind" "nil"] [":text" "nil"]]],
                          "task-group" ["def"
                                        "task-group"
                                        ["{}"
                                         [":id" "nil"]
                                         [":name" "nil"]
                                         [":users" ["#{}"]]
                                         [":admins" ["#{}"]]
                                         [":tasks" ["{}"]]
                                         [":order" ":none"]
                                         [":done-tasks" ["{}"]]
                                         [":show-done?" "false"]]]},
                   :procs []},
         "updater.user" {:ns ["ns" "server.updater.user" [":require" ["[]" "server.util" ":refer" ["[]" "find-first"]]]],
                         :defs {"sign-up" ["defn"
                                           "sign-up"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["let"
                                            [[["[]" "username" "password"] "op-data"]
                                             ["maybe-user"
                                              ["find-first"
                                               ["fn" ["user"] ["=" "username" [":name" "user"]]]
                                               ["vals" [":users" "db"]]]]]
                                            ["if"
                                             ["some?" "maybe-user"]
                                             ["update-in"
                                              "db"
                                              ["[]" ":sessions" "session-id" ":notifications"]
                                              ["fn"
                                               ["notifications"]
                                               ["conj"
                                                "notifications"
                                                ["{}"
                                                 [":id" "op-id"]
                                                 [":kind" ":attentive"]
                                                 [":text" ["str" "|Name is token: " "username"]]]]]]
                                             ["->"
                                              "db"
                                              ["assoc-in" ["[]" ":sessions" "session-id" ":user-id"] "op-id"]
                                              ["assoc-in"
                                               ["[]" ":users" "op-id"]
                                               ["{}"
                                                [":id" "op-id"]
                                                [":name" "username"]
                                                [":nickname" "username"]
                                                [":password" "password"]
                                                [":avatar" "nil"]]]]]]],
                                "set-avatar" ["defn"
                                              "set-avatar"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["let"
                                               [["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]]
                                               ["if"
                                                ["some?" "user-id"]
                                                ["assoc-in" "db" ["[]" ":users" "user-id" ":avatar"] "op-data"]
                                                "db"]]],
                                "log-in" ["defn"
                                          "log-in"
                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                          ["let"
                                           [[["[]" "username" "password"] "op-data"]
                                            ["maybe-user"
                                             ["find-first"
                                              ["fn" ["user"] ["and" ["=" "username" [":name" "user"]]]]
                                              ["vals" [":users" "db"]]]]]
                                           ["update-in"
                                            "db"
                                            ["[]" ":sessions" "session-id"]
                                            ["fn"
                                             ["session"]
                                             ["if"
                                              ["some?" "maybe-user"]
                                              ["if"
                                               ["=" "password" [":password" "maybe-user"]]
                                               ["assoc" "session" ":user-id" [":id" "maybe-user"]]
                                               ["update"
                                                "session"
                                                ":notifications"
                                                ["fn"
                                                 ["notifications"]
                                                 ["conj"
                                                  "notifications"
                                                  ["{}"
                                                   [":id" "op-id"]
                                                   [":kind" ":attentive"]
                                                   [":text" ["str" "|Wrong password for " "username"]]]]]]]
                                              ["update"
                                               "session"
                                               ":notifications"
                                               ["fn"
                                                ["notifications"]
                                                ["conj"
                                                 "notifications"
                                                 ["{}"
                                                  [":id" "op-id"]
                                                  [":kind" ":attentive"]
                                                  [":text" ["str" "|No user named: " "username"]]]]]]]]]]],
                                "log-out" ["defn"
                                           "log-out"
                                           ["db" "op-data" "session-id" "op-id" "op-time"]
                                           ["assoc-in" "db" ["[]" ":sessions" "session-id" ":user-id"] "nil"]]},
                         :procs []},
         "updater.session" {:ns ["ns" "server.updater.session" [":require" ["[]" "server.schema" ":as" "schema"]]],
                            :defs {"connect" ["defn"
                                              "connect"
                                              ["db" "op-data" "session-id" "op-id" "op-time"]
                                              ["assoc-in"
                                               "db"
                                               ["[]" ":sessions" "session-id"]
                                               ["merge" "schema/session" ["{}" [":id" "session-id"]]]]],
                                   "disconnect" ["defn"
                                                 "disconnect"
                                                 ["db" "op-data" "session-id" "op-id" "op-time"]
                                                 ["update"
                                                  "db"
                                                  ":sessions"
                                                  ["fn" ["session"] ["dissoc" "session" "session-id"]]]],
                                   "toggle-hidden" ["defn"
                                                    "toggle-hidden"
                                                    ["db" "op-data" "session-id" "op-id" "op-time"]
                                                    ["update-in"
                                                     "db"
                                                     ["[]" ":sessions" "session-id" ":show-done?"]
                                                     "not"]],
                                   "remove-notification" ["defn"
                                                          "remove-notification"
                                                          ["db" "op-data" "session-id" "op-id" "op-time"]
                                                          ["update-in"
                                                           "db"
                                                           ["[]" ":sessions" "session-id" ":notifications"]
                                                           ["fn"
                                                            ["notifications"]
                                                            ["subvec" "notifications" "0" "op-data"]]]]},
                            :procs []},
         "main" {:ns ["ns"
                      "server.main"
                      [":require"
                       ["[]" "cljs.nodejs" ":as" "nodejs"]
                       ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]
                       ["[]" "server.schema" ":as" "schema"]
                       ["[]" "server.network" ":refer" ["[]" "run-server!" "render-clients!"]]
                       ["[]" "server.updater.core" ":refer" ["[]" "updater"]]
                       ["[]" "cljs.core.async" ":refer" ["[]" "<!"]]]
                      [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go-loop"]]]],
                 :defs {"on-jsload!" ["defn"
                                      "on-jsload!"
                                      []
                                      ["println" "|Code updated."]
                                      ["render-clients!" "@reader-db-ref"]],
                        "-main" ["defn"
                                 "-main"
                                 []
                                 ["nodejs/enable-util-print!"]
                                 ["let"
                                  [["server-ch" ["run-server!" ["{}" ":port" "5021"]]]]
                                  ["go-loop"
                                   ["[]"]
                                   ["let"
                                    [[["[]" "op" "op-data" "session-id" "op-id" "op-time"] ["<!" "server-ch"]]]
                                    ["println" "|Action:" "op" ["pr-str" "op-data"] "session-id" "op-id" "op-time"]
                                    ["--" "println" "|Database:" "@writer-db-ref"]
                                    ["try"
                                     ["let"
                                      [["new-db"
                                        ["updater" "@writer-db-ref" "op" "op-data" "session-id" "op-id" "op-time"]]]
                                      ["reset!" "writer-db-ref" "new-db"]]
                                     ["catch" "js/Error" "e" [".log" "js/console" "e"]]]
                                    ["recur"]]]
                                  ["render-loop!"]]
                                 ["add-watch" "reader-db-ref" ":log" ["fn" []]]
                                 [".on"
                                  "js/process"
                                  "|exit"
                                  ["fn" ["code"] ["println" "|Exit:" "code"] ["persist-db!"]]]
                                 ["println" "|Server started."]],
                        "writer-db-ref" ["defonce"
                                         "writer-db-ref"
                                         ["atom"
                                          ["let"
                                           [["fs" ["js/require" "|fs"]]]
                                           ["enable-console-print!"]
                                           ["if"
                                            ["fs.existsSync" [":storage-key" "schema/configs"]]
                                            ["do"
                                             ["println" "|Found storage, loading."]
                                             ["read-string"
                                              ["fs.readFileSync" [":storage-key" "schema/configs"] "|utf8"]]]
                                            ["do" ["println" "|No storage found."] "schema/database"]]]]],
                        "persist-db!" ["defn"
                                       "persist-db!"
                                       []
                                       ["let"
                                        [["raw" ["pr-str" ["assoc" "@writer-db-ref" ":sessions" ["{}"]]]]
                                         ["fs" ["js/require" "|fs"]]]
                                        ["println" "|Writing DB to storage."]
                                        ["fs.writeFileSync" [":storage-key" "schema/configs"] "raw"]]],
                        "render-loop!" ["defn"
                                        "render-loop!"
                                        []
                                        ["if"
                                         ["not=" "@reader-db-ref" "@writer-db-ref"]
                                         ["do"
                                          ["reset!" "reader-db-ref" "@writer-db-ref"]
                                          ["--" "println" "|render loop"]
                                          ["render-clients!" "@reader-db-ref"]]]
                                        ["js/setTimeout" "render-loop!" "300"]],
                        "reader-db-ref" ["defonce" "reader-db-ref" ["atom" "@writer-db-ref"]]},
                 :procs [["set!" "*main-cli-fn*" "-main"]]},
         "network" {:ns ["ns"
                         "server.network"
                         [":require"
                          ["[]" "cljs.nodejs" ":as" "nodejs"]
                          ["[]" "cljs.reader" ":as" "reader"]
                          ["[]" "cljs.core.async" ":refer" ["[]" "chan" ">!"]]
                          ["[]" "server.twig.container" ":refer" ["[]" "twig-container"]]
                          ["[]" "recollect.diff" ":refer" ["[]" "diff-bunch"]]
                          ["[]" "recollect.bunch" ":refer" ["[]" "render-bunch"]]]
                         [":require-macros" ["[]" "cljs.core.async.macros" ":refer" ["[]" "go"]]]],
                    :defs {"socket-registry" ["defonce" "socket-registry" ["atom" ["{}"]]],
                           "run-server!" ["defn"
                                          "run-server!"
                                          ["configs"]
                                          ["let"
                                           [["wss" ["new" "WebSocketServer" ["js-obj" "|port" [":port" "configs"]]]]]
                                           [".on"
                                            "wss"
                                            "|connection"
                                            ["fn"
                                             ["socket"]
                                             ["let"
                                              [["session-id" [".generate" "shortid"]]]
                                              ["handle-message" ":session/connect" "nil" "session-id"]
                                              ["swap!" "socket-registry" "assoc" "session-id" "socket"]
                                              [".on"
                                               "socket"
                                               "|message"
                                               ["fn"
                                                ["rawData"]
                                                ["let"
                                                 [["action" ["reader/read-string" "rawData"]]
                                                  [["[]" "op" "op-data"] "action"]]
                                                 ["handle-message" "op" "op-data" "session-id"]]]]
                                              [".on"
                                               "socket"
                                               "|close"
                                               ["fn"
                                                []
                                                ["swap!" "socket-registry" "dissoc" "session-id"]
                                                ["handle-message" ":session/disconnect" "nil" "session-id"]]]]]]]
                                          "server-chan"],
                           "render-clients!" ["defn"
                                              "render-clients!"
                                              ["db"]
                                              ["doseq"
                                               ["[]" "session-entry" [":sessions" "db"]]
                                               ["let"
                                                [[["[]" "session-id" "session"] "session-entry"]
                                                 ["old-store" ["or" ["get" "@client-caches" "session-id"] "nil"]]
                                                 ["new-store"
                                                  ["render-bunch" ["twig-container" "db" "session"] "old-store"]]
                                                 ["changes" ["diff-bunch" ["[]"] "old-store" "new-store"]]
                                                 ["socket" ["get" "@socket-registry" "session-id"]]]
                                                ["if"
                                                 ["and" ["not=" "changes" ["[]"]] ["some?" "socket"]]
                                                 ["do"
                                                  [".send" "socket" ["pr-str" "changes"]]
                                                  ["swap!" "client-caches" "assoc" "session-id" "new-store"]]]]]],
                           "client-caches" ["defonce" "client-caches" ["atom" ["{}"]]],
                           "server-chan" ["defonce" "server-chan" ["chan"]],
                           "shortid" ["def" "shortid" ["js/require" "|shortid"]],
                           "WebSocketServer" ["def" "WebSocketServer" [".-Server" "ws"]],
                           "handle-message" ["defn"
                                             "handle-message"
                                             ["op" "op-data" "session-id"]
                                             ["let"
                                              [["op-id" [".generate" "shortid"]] ["op-time" [".valueOf" ["js/Date."]]]]
                                              ["go"
                                               [">!" "server-chan" ["[]" "op" "op-data" "session-id" "op-id" "op-time"]]]]],
                           "ws" ["def" "ws" ["js/require" "|uws"]]},
                    :procs []},
         "twig.group" {:ns ["ns"
                            "server.twig.group"
                            [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                       :defs {"twig-group" ["def"
                                            "twig-group"
                                            ["create-twig"
                                             ":group"
                                             ["fn"
                                              ["task-group" "show-done?"]
                                              ["->"
                                               "task-group"
                                               ["dissoc" ":admins"]
                                               ["dissoc" ":users"]
                                               ["update"
                                                ":done-tasks"
                                                ["fn" ["tasks"] ["if" "show-done?" "tasks" "nil"]]]]]]]},
                       :procs []},
         "twig.user" {:ns ["ns" "server.twig.user" [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                      :defs {"twig-user" ["def"
                                          "twig-user"
                                          ["create-twig"
                                           ":user"
                                           ["fn"
                                            ["user"]
                                            ["->"
                                             "user"
                                             ["dissoc" ":password"]
                                             ["update"
                                              ":avatar"
                                              ["fn"
                                               ["avatar"]
                                               ["or"
                                                "avatar"
                                                "|http://tva4.sinaimg.cn/crop.0.0.512.512.180/61b454d3jw8el60qqair7j20e80e874r.jpg"]]]]]]]},
                      :procs []},
         "updater.core" {:ns ["ns"
                              "server.updater.core"
                              [":require"
                               ["[]" "server.updater.session" ":as" "session"]
                               ["[]" "server.updater.user" ":as" "user"]
                               ["[]" "server.updater.router" ":as" "router"]
                               ["[]" "server.updater.task-group" ":as" "task-group"]
                               ["[]" "server.updater.task" ":as" "task"]
                               ["[]" "server.updater.message" ":as" "message"]]],
                         :defs {"updater" ["defn"
                                           "updater"
                                           ["db" "op" "op-data" "session-id" "op-id" "op-time"]
                                           ["case"
                                            "op"
                                            [":session/connect"
                                             ["session/connect" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":session/disconnect"
                                             ["session/disconnect" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/log-in"
                                             ["user/log-in" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/sign-up"
                                             ["user/sign-up" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/log-out"
                                             ["user/log-out" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":user/avatar"
                                             ["user/set-avatar" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":session/remove-notification"
                                             ["session/remove-notification"
                                              "db"
                                              "op-data"
                                              "session-id"
                                              "op-id"
                                              "op-time"]]
                                            [":router/change"
                                             ["router/change" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/create"
                                             ["task-group/create" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/rename"
                                             ["task-group/rename" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/delete"
                                             ["task-group/delete" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/add-member"
                                             ["task-group/add-member" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/delete-member"
                                             ["task-group/delete-member" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task-group/change-role"
                                             ["task-group/change-role" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":session/toggle-hidden"
                                             ["session/toggle-hidden" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task/create"
                                             ["task/create" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task/toggle"
                                             ["task/toggle" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task/edit" ["task/edit" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task/delete"
                                             ["task/delete" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":task/touch" ["task/touch" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            [":message/create"
                                             ["message/create" "db" "op-data" "session-id" "op-id" "op-time"]]
                                            "db"]]},
                         :procs []},
         "updater.message" {:ns ["ns" "server.updater.message" [":require" ["[]" "server.schema" ":as" "schema"]]],
                            :defs {"create" ["defn"
                                             "create"
                                             ["db" "op-data" "session-id" "op-id" "op-time"]
                                             ["let"
                                              [["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]]
                                              ["->"
                                               "db"
                                               ["assoc-in"
                                                ["[]" ":messages" "op-id"]
                                                ["merge"
                                                 "schema/message"
                                                 ["{}"
                                                  [":id" "op-id"]
                                                  [":text" "op-data"]
                                                  [":author-id" "user-id"]
                                                  [":time" "op-time"]]]]
                                               ["update"
                                                ":messages"
                                                ["fn"
                                                 ["messages"]
                                                 ["if"
                                                  [">" ["count" "messages"] "10"]
                                                  ["gc-messages-map" "messages" "1"]
                                                  "messages"]]]]]],
                                   "gc-messages-map" ["defn"
                                                      "gc-messages-map"
                                                      ["messages" "interval"]
                                                      ["let"
                                                       [["now" [".now" "js/Date"]]]
                                                       ["->>"
                                                        "messages"
                                                        ["filter"
                                                         ["fn"
                                                          ["entry"]
                                                          ["let"
                                                           [["message" ["val" "entry"]]]
                                                           ["<"
                                                            ["-" "now" [":time" "message"]]
                                                            ["*" "1000" "60" "interval"]]]]]
                                                        ["into" ["{}"]]]]]},
                            :procs []},
         "updater.task-group" {:ns ["ns" "server.updater.task-group" [":require" ["[]" "server.schema" ":as" "schema"]]],
                               :defs {"rename" ["defn"
                                                "rename"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["assoc-in"
                                                 "db"
                                                 ["[]" ":task-groups" [":id" "op-data"] ":name"]
                                                 [":text" "op-data"]]],
                                      "delete" ["defn"
                                                "delete"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["->"
                                                 "db"
                                                 ["update"
                                                  ":task-groups"
                                                  ["fn" ["cursor"] ["dissoc" "cursor" "op-data"]]]
                                                 ["update"
                                                  ":users"
                                                  ["fn"
                                                   ["users"]
                                                   ["->>"
                                                    "users"
                                                    ["map"
                                                     ["fn"
                                                      ["entry"]
                                                      ["let"
                                                       [[["[]" "user-id" "user"] "entry"]]
                                                       ["[]"
                                                        "user-id"
                                                        ["update"
                                                         "user"
                                                         ":involved-groups"
                                                         ["fn" ["groups"] ["into" ["#{}"] ["disj" "groups" "op-data"]]]]]]]]
                                                    ["into" ["{}"]]]]]]],
                                      "create" ["defn"
                                                "create"
                                                ["db" "op-data" "session-id" "op-id" "op-time"]
                                                ["let"
                                                 [["user-id" ["get-in" "db" ["[]" ":sessions" "session-id" ":user-id"]]]]
                                                 ["->"
                                                  "db"
                                                  ["assoc-in"
                                                   ["[]" ":task-groups" "op-id"]
                                                   ["merge"
                                                    "schema/task-group"
                                                    ["{}"
                                                     [":id" "op-id"]
                                                     [":name" "op-data"]
                                                     [":admins" ["#{}" "user-id"]]]]]
                                                  ["update-in"
                                                   ["[]" ":users" "user-id" ":involved-groups"]
                                                   ["fn"
                                                    ["involved-groups"]
                                                    ["into" ["#{}"] ["conj" "involved-groups" "op-id"]]]]]]],
                                      "add-member" ["defn"
                                                    "add-member"
                                                    ["db" "op-data" "session-id" "op-id" "op-time"]
                                                    ["->"
                                                     "db"
                                                     ["update-in"
                                                      ["[]" ":task-groups" [":group-id" "op-data"] ":users"]
                                                      ["fn" ["users"] ["conj" "users" [":user-id" "op-data"]]]]
                                                     ["update-in"
                                                      ["[]" ":users" [":user-id" "op-data"] ":involved-groups"]
                                                      ["fn" ["groups"] ["conj" "groups" [":group-id" "op-data"]]]]]],
                                      "change-role" ["defn"
                                                     "change-role"
                                                     ["db" "op-data" "session-id" "op-id" "op-time"]
                                                     ["update-in"
                                                      "db"
                                                      ["[]" ":task-groups" [":group-id" "op-data"]]
                                                      ["fn"
                                                       ["task-group"]
                                                       ["if"
                                                        [":admin?" "op-data"]
                                                        ["->"
                                                         "task-group"
                                                         ["update"
                                                          ":admins"
                                                          ["fn" ["admins"] ["disj" "admins" [":user-id" "op-data"]]]]
                                                         ["update"
                                                          ":users"
                                                          ["fn" ["users"] ["conj" "users" [":user-id" "op-data"]]]]]
                                                        ["->"
                                                         "task-group"
                                                         ["update"
                                                          ":admins"
                                                          ["fn" ["admins"] ["conj" "admins" [":user-id" "op-data"]]]]
                                                         ["update"
                                                          ":users"
                                                          ["fn" ["users"] ["disj" "users" [":user-id" "op-data"]]]]]]]]],
                                      "delete-member" ["defn"
                                                       "delete-member"
                                                       ["db" "op-data" "session-id" "op-id" "op-time"]
                                                       ["->"
                                                        "db"
                                                        ["update-in"
                                                         ["[]" ":task-groups" [":group-id" "op-data"] ":users"]
                                                         ["fn" ["users"] ["disj" "users" [":user-id" "op-data"]]]]
                                                        ["update-in"
                                                         ["[]" ":task-groups" [":group-id" "op-data"] ":admins"]
                                                         ["fn" ["users"] ["disj" "users" [":user-id" "op-data"]]]]
                                                        ["update-in"
                                                         ["[]" ":users" [":user-id" "op-data"] ":involved-groups"]
                                                         ["fn" ["groups"] ["disj" "groups" [":group-id" "op-data"]]]]]]},
                               :procs []},
         "twig.group-brief" {:ns ["ns"
                                  "server.twig.group-brief"
                                  [":require" ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]]],
                             :defs {"twig.group-brief" ["def"
                                                        "twig-group-brief"
                                                        ["create-twig"
                                                         ":group-brief"
                                                         ["fn"
                                                          ["task-group"]
                                                          ["->"
                                                           "task-group"
                                                           ["dissoc" ":tasks"]
                                                           ["dissoc" ":done-tasks"]
                                                           ["dissoc" ":admins"]
                                                           ["dissoc" ":users"]]]]]},
                             :procs []},
         "twig.core" {:ns ["ns"
                           "server.twig.core"
                           [":require"
                            ["[]" "recollect.bunch" ":refer" ["[]" "create-twig"]]
                            ["[]" "server.twig.user" ":refer" ["[]" "twig-user"]]]],
                      :defs {"twig-message" ["def"
                                             "twig-message"
                                             ["create-twig"
                                              ":message"
                                              ["fn" ["message" "user"] ["assoc" "message" ":user" ["twig-user" "user"]]]]]},
                      :procs []}}}
